name: Test Examples

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Examples to run'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        # - anthropic
        - aws-bedrock
        - azure-openai
        - openai
        - google-gemini
        - gcp-vertex

jobs:
  test-examples:
    name: Run examples
    runs-on: ubuntu-latest
    env:
      # OpenAI
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL_NAME: ${{ secrets.OPENAI_MODEL_NAME }}

      # Azure OpenAI
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
      AZURE_OPENAI_API_VERSION: ${{ secrets.AZURE_OPENAI_API_VERSION }}
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}

      # Anthropic
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

      # Google
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      # AWS
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_BEDROCK_MODEL_NAME: ${{ secrets.AWS_BEDROCK_MODEL_NAME }}

      # Configuration
      LLM_SHOW_TIMING: ${{ secrets.LLM_SHOW_TIMING }}
      ENABLE_TRACING: ${{ secrets.ENABLE_TRACING }}
      LLM_PROVIDER: ${{ secrets.LLM_PROVIDER }}

      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: latest

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          .venv
          .uv
        key: ${{ runner.os }}-3.13-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-3.13-

    - name: Install dependencies
      run: |
        uv sync --dev

    # - name: Test Anthropic
    #   if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'anthropic'
    #   run: |
    #     source .venv/bin/activate
    #     if [ -n "$ANTHROPIC_API_KEY" ]; then
    #       echo "Testing Anthropic..."
    #       python examples/anthropic_stream.py || echo "Anthropic streaming failed"
    #     else
    #       echo "Skipping Anthropic tests (no API key)"
    #     fi
    #   continue-on-error: true

    - name: Test AWS Bedrock
      if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'aws-bedrock'
      run: |
        source .venv/bin/activate
        if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
          echo "Testing AWS Bedrock..."
          python examples/aws_bedrock_stream.py || echo "AWS Bedrock failed"
        else
          echo "Skipping AWS tests (no credentials)"
        fi
      continue-on-error: true

    - name: Test Azure OpenAI Example
      if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'azure-openai'
      run: |
        source .venv/bin/activate
        echo "ðŸ§ª Testing Azure OpenAI Example"
        python examples/azure_openai_example.py
      continue-on-error: true

    - name: Test OpenAI
      if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'openai'
      run: |
        source .venv/bin/activate
        echo "ðŸ§ª Testing OpenAI Example"
        python examples/openai_example.py
      continue-on-error: true

    - name: Test Google Gemini
      if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'google-gemini'
      run: |
        source .venv/bin/activate
        if [ -n "$GOOGLE_API_KEY" ]; then
          echo "Testing Google Gemini..."
          python examples/google_gemini_stream.py || echo "Google Gemini failed"
        else
          echo "Skipping Google tests (no API key)"
        fi
      continue-on-error: true

    - name: Test Google Vertex AI
      if: github.event.inputs.test_type == 'all' || github.event.inputs.test_type == 'gcp-vertex'
      run: |
        source .venv/bin/activate
        if [ -n "$GOOGLE_APPLICATION_CREDENTIALS" ]; then
          echo "Testing Google Vertex AI..."
          python examples/gcp_vertex_stream.py || echo "Google Vertex AI failed"
        else
          echo "Skipping Vertex AI tests (no credentials)"
        fi
      continue-on-error: true

    - name: Test Results Summary
      if: always()
      run: |
        echo "ðŸ“Š Test Execution Summary"
        echo "========================"
        echo "All test steps completed (some may have failed)"
        echo "Check individual step results above for details"
